{"version":3,"file":"static/webpack/static/development/pages/meet.js.8b73ec92dcc5ec4dc2e4.hot-update.js","sources":["webpack:///./pages/meet/index.jsx"],"sourcesContent":["import { format } from \"date-fns\";\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { convertToTimeInterval } from \"../../features/schedule/helpers/timeBarHelpers\";\nimport firebase from \"../../sideEffects/firebase\";\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nconst getInitialProps = async url => {\n  const slug = url.query.slug;\n  const meetings = await firebase\n    .firestore()\n    .collection(\"meetings\")\n    .doc(slug)\n    .get()\n    .then(doc => doc.exists && doc.data())\n    .catch(error => error);\n\n  return { meetings };\n};\n\nexport default function index({ meetings, url }) {\n  const options = Object.entries(JSON.parse(meetings.options));\n  const slug = url.query.slug;\n  const [confirm, setConfirm] = React.useState(false);\n  const [selected, setSelected] = React.useState(false);\n  return (\n    <Layout>\n      <h1 className=\"f1 tc\">Pick a time...</h1>\n      <section className=\"flex items-center justify-center\">\n        {options &&\n          options.map(([date, time]) =>\n            time.map(time => (\n              <TimeBox\n                date={date}\n                time={time}\n                slug={slug}\n                setSelected={setSelected}\n                selected={selected}\n              />\n            ))\n          )}\n      </section>\n      {/* {selected && (\n        <PrimaryButton\n          text=\"Confirm\"\n          action={() => selectTime(date, time, slug)}\n        />\n      )} */}\n    </Layout>\n  );\n}\n\nindex.propTypes = propTypes;\nindex.defaultProps = defaultProps;\nindex.getInitialProps = getInitialProps;\n\nconst TimeBox = ({ date, time, setSelected, selected }) => {\n  const picked = date === selected.date && time === selected.time;\n  console.table({ date, d2: selected.date, time, t2: selected.time });\n  console.log(\"picked\", picked);\n  return (\n    <article\n      className={`mw5 center br3 pa3 pa4-ns mv3 ba b--black-10 pointer grow ${\n        picked ? \"bg-light-blue\" : \"bg-white\"\n      }`}\n      key={date + time}\n      onClick={() => setSelected({ date, time })}\n    >\n      <div className=\"tc\">\n        <h1 className=\"f4 black-70\">{format(new Date(date), \"do MMMM\")}</h1>\n        <hr className=\"mw3 bb bw1 b--black-10\" />\n      </div>\n      <p className=\"lh-copy measure center f3 \">\n        {convertToTimeInterval(time)}\n      </p>\n    </article>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AATA;AAEA;AAFA;AAUA;AAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAoBA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAKA;;;;A","sourceRoot":""}