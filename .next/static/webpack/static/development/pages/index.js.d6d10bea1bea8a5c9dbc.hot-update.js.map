{"version":3,"file":"static/webpack/static/development/pages/index.js.d6d10bea1bea8a5c9dbc.hot-update.js","sources":["webpack:///./features/schedule/components/TimeBar.jsx","webpack:///./static/svg/Add.jsx"],"sourcesContent":["import { format } from \"date-fns\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { SecondaryButton } from \"../../../components/Buttons\";\nimport { Add } from \"../../../static/svg/Add\";\nconst propTypes = {\n  dates: PropTypes.arrayOf(PropTypes.string).isRequired,\n  send: PropTypes.func.isRequired\n};\nconst defaultProps = {};\n\nexport default function TimeBar({ dates, send }) {\n  const [times, setTimes] = React.useState([1]);\n  return (\n    <section className=\"w-100 tc\">\n      {dates &&\n        dates.map(date => (\n          <div className=\"pa5\" key={date}>\n            {times && times.map(time => <TimeBlock date={date} />)}\n\n            {/* <div className=\"tc\">\n              <SecondaryButton\n                className=\"relative top-2\"\n                action={() => setTimes(times.concat(1))}\n                text=\"Add another time on the same day.\"\n              />\n            </div> */}\n          </div>\n        ))}\n      <SecondaryButton\n        action={() => send(\"ADDED_NEW_DATE\")}\n        text=\"+ Add Another Date\"\n      />\n    </section>\n  );\n}\n\nTimeBar.propTypes = propTypes;\nTimeBar.defaultProps = defaultProps;\n\nexport const convertToTimeInterval = times => {\n  const timeA = times[0];\n  const timeB = times[1];\n\n  const TwelveHourFormat = time => {\n    if (time > 12) {\n      return `${time - 12} pm`;\n    }\n    return `${time} am`;\n  };\n\n  return `${TwelveHourFormat(timeA)} to ${TwelveHourFormat(timeB)}`;\n};\n\nfunction TimeBlock({ date }) {\n  const [values, handleChange] = React.useState([12, 13]);\n\n  return (\n    <>\n      <h3 className=\"tc\">\n        {format(new Date(date), \"do MMMM\")} {convertToTimeInterval(values)}\n      </h3>\n      <div className=\"h3 ma3 flex \">\n        <div className=\"w-100\">\n          <div className=\"flex justify-around relative top-2\">\n            <Add className=\"\" />\n            {new Array(25).fill(\"\").map((value, index) => {\n              if (index === 0) {\n                return (\n                  <div\n                    key={index}\n                    className={`bn flex items-center justify-center w-100 z-1`}\n                  >\n                    <Add className=\"grow dim pb2\" />\n                  </div>\n                );\n              }\n              return (\n                <div\n                  key={index}\n                  className={`bn tc w-100 ${(index <= 5 || index >= 20) &&\n                    \"bg-light-gray\"}`}\n                >\n                  <p className={`code pb2 tc`}>{index}</p>\n                </div>\n              );\n            })}\n          </div>\n          <RangeSelector\n            values={values}\n            min={0}\n            max={24}\n            step={1}\n            color=\"#7D52D8\"\n            className=\"relative  bottom-2 pt1\"\n            onChange={handleChange}\n            round=\"small\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nexport default function Add({ className }) {\n  return (\n    <React.Fragment>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        className={className}\n      >\n        <circle cx=\"12\" cy=\"12\" r=\"10\" />\n        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\" />\n        <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\" />\n      </svg>\n    </React.Fragment>\n  );\n}\n\nAdd.propTypes = propTypes;\nAdd.defaultProps = defaultProps;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAcA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;;;;;;;;;;;;;;ACtGA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;;;;A","sourceRoot":""}