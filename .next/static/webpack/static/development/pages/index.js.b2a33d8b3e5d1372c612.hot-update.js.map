{"version":3,"file":"static/webpack/static/development/pages/index.js.b2a33d8b3e5d1372c612.hot-update.js","sources":["webpack:///./features/schedule/components/TimeBar.jsx"],"sourcesContent":["import { format } from \"date-fns\";\nimport { RangeSelector } from \"grommet\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { SecondaryButton } from \"../../../components/Buttons\";\nimport Add from \"../../../static/svg/Add\";\n\nconst propTypes = {\n  dates: PropTypes.arrayOf(PropTypes.string).isRequired,\n  send: PropTypes.func.isRequired\n};\nconst defaultProps = {};\n\nexport default function TimeBar({ dates, send, setDates }) {\n  return (\n    <section className=\"w-100 h-75 tc\">\n      <h1 className=\"f1\">Select up to 3 times...</h1>\n      {dates &&\n        Object.keys(dates).map(date => (\n          <div key={date}>\n            {Object.values(dates).map(time => (\n              <TimeBlock date={date} setDates={setDates} dates={dates} />\n            ))}\n          </div>\n        ))}\n\n      <SecondaryButton\n        action={() => send(\"ADDED_NEW_DATE\")}\n        text=\"+ Add Another Date\"\n        className=\"mt5 h-25\"\n      />\n    </section>\n  );\n}\n\nTimeBar.propTypes = propTypes;\nTimeBar.defaultProps = defaultProps;\n\nexport const convertToTimeInterval = times => {\n  const timeA = times[0];\n  const timeB = times[1];\n\n  const TwelveHourFormat = time => {\n    if (time > 12) {\n      return `${time - 12} pm`;\n    }\n    return `${time} am`;\n  };\n\n  return `${TwelveHourFormat(timeA)} to ${TwelveHourFormat(timeB)}`;\n};\n\nfunction TimeBlock({ date, dates, times }) {\n  const [values, handleChange] = React.useState([12, 13]);\n\n  return (\n    <>\n      <h3 className=\"tc mt5 relative top-2\">\n        {format(new Date(date), \"do MMMM\")}{\" \"}\n        <span className=\"f2 pl3\">{convertToTimeInterval(values)}</span>\n      </h3>\n      <div className=\"h3 ma3 flex\">\n        <div className=\"w-100 pt0\">\n          <div className=\"flex justify-around relative top-2\">\n            {new Array(25).fill(\"\").map((value, index) => {\n              if (index === 0) {\n                return (\n                  <div\n                    key={index}\n                    className={`bn flex items-center justify-center w-100 z-1`}\n                  >\n                    <Add\n                      className=\"grow pb2 pointer gray\"\n                      onClick={() => setTimes(times.concat(1))}\n                    />\n                  </div>\n                );\n              }\n              return (\n                <div\n                  key={index}\n                  className={`bn tc w-100 ${(index <= 5 || index >= 20) &&\n                    \"bg-light-gray\"}`}\n                >\n                  <p className={`code pb2 tc`}>{index}</p>\n                </div>\n              );\n            })}\n          </div>\n          <RangeSelector\n            values={values}\n            min={0}\n            max={24}\n            step={1}\n            color=\"#7D52D8\"\n            className=\"relative  bottom-2 pt1\"\n            onChange={handleChange}\n            round=\"small\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;A","sourceRoot":""}