{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/joshpitzalis/Desktop/meetbox/features/schedule/components/TimeBar.jsx\";\nimport { format } from \"date-fns\";\nimport { RangeSelector } from \"grommet\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { SecondaryButton } from \"../../../components/Buttons\";\nimport Add from \"../../../static/svg/Add\";\nvar propTypes = {\n  dates: PropTypes.arrayOf(PropTypes.string).isRequired,\n  send: PropTypes.func.isRequired\n};\nvar defaultProps = {};\nexport default function TimeBar(_ref) {\n  var dates = _ref.dates,\n      send = _ref.send;\n\n  var _React$useState = React.useState([1]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      times = _React$useState2[0],\n      setTimes = _React$useState2[1];\n\n  return React.createElement(\"section\", {\n    className: \"w-100 tc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, dates && dates.map(function (date) {\n    return React.createElement(\"div\", {\n      className: \"pa5\",\n      key: date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, times && times.map(function (time) {\n      return React.createElement(TimeBlock, {\n        date: date,\n        setTimes: setTimes,\n        times: times,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }));\n  }), React.createElement(SecondaryButton, {\n    action: function action() {\n      return send(\"ADDED_NEW_DATE\");\n    },\n    text: \"+ Add Another Date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}\nTimeBar.propTypes = propTypes;\nTimeBar.defaultProps = defaultProps;\nexport var convertToTimeInterval = function convertToTimeInterval(times) {\n  var timeA = times[0];\n  var timeB = times[1];\n\n  var TwelveHourFormat = function TwelveHourFormat(time) {\n    if (time > 12) {\n      return \"\".concat(time - 12, \" pm\");\n    }\n\n    return \"\".concat(time, \" am\");\n  };\n\n  return \"\".concat(TwelveHourFormat(timeA), \" to \").concat(TwelveHourFormat(timeB));\n};\n\nfunction TimeBlock(_ref2) {\n  var date = _ref2.date,\n      setTimes = _ref2.setTimes,\n      times = _ref2.times;\n\n  var _React$useState3 = React.useState([12, 13]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      values = _React$useState4[0],\n      handleChange = _React$useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    className: \"tc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, format(new Date(date), \"do MMMM\"), \" \", convertToTimeInterval(values)), React.createElement(\"div\", {\n    className: \"h3 ma3 flex \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex justify-around relative top-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, new Array(25).fill(\"\").map(function (value, index) {\n    if (index === 0) {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"bn flex items-center justify-center w-100 z-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Add, {\n        className: \"grow pb2 pointer gray\",\n        onClick: function onClick() {\n          return setTimes(times.concat(1));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"bn tc w-100 \".concat((index <= 5 || index >= 20) && \"bg-light-gray\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"code pb2 tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, index));\n  })), React.createElement(RangeSelector, {\n    values: values,\n    min: 0,\n    max: 24,\n    step: 1,\n    color: \"#7D52D8\",\n    className: \"relative  bottom-2 pt1\",\n    onChange: handleChange,\n    round: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/joshpitzalis/Desktop/meetbox/features/schedule/components/TimeBar.jsx"],"names":["format","RangeSelector","PropTypes","React","SecondaryButton","Add","propTypes","dates","arrayOf","string","isRequired","send","func","defaultProps","TimeBar","useState","times","setTimes","map","date","time","convertToTimeInterval","timeA","timeB","TwelveHourFormat","TimeBlock","values","handleChange","Date","Array","fill","value","index","concat"],"mappings":"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","sourcesContent":["import { format } from \"date-fns\";\nimport { RangeSelector } from \"grommet\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { SecondaryButton } from \"../../../components/Buttons\";\nimport Add from \"../../../static/svg/Add\";\n\nconst propTypes = {\n  dates: PropTypes.arrayOf(PropTypes.string).isRequired,\n  send: PropTypes.func.isRequired\n};\nconst defaultProps = {};\n\nexport default function TimeBar({ dates, send }) {\n  const [times, setTimes] = React.useState([1]);\n  return (\n    <section className=\"w-100 tc\">\n      {dates &&\n        dates.map(date => (\n          <div className=\"pa5\" key={date}>\n            {times &&\n              times.map(time => (\n                <TimeBlock date={date} setTimes={setTimes} times={times} />\n              ))}\n          </div>\n        ))}\n      <SecondaryButton\n        action={() => send(\"ADDED_NEW_DATE\")}\n        text=\"+ Add Another Date\"\n      />\n    </section>\n  );\n}\n\nTimeBar.propTypes = propTypes;\nTimeBar.defaultProps = defaultProps;\n\nexport const convertToTimeInterval = times => {\n  const timeA = times[0];\n  const timeB = times[1];\n\n  const TwelveHourFormat = time => {\n    if (time > 12) {\n      return `${time - 12} pm`;\n    }\n    return `${time} am`;\n  };\n\n  return `${TwelveHourFormat(timeA)} to ${TwelveHourFormat(timeB)}`;\n};\n\nfunction TimeBlock({ date, setTimes, times }) {\n  const [values, handleChange] = React.useState([12, 13]);\n\n  return (\n    <>\n      <h3 className=\"tc\">\n        {format(new Date(date), \"do MMMM\")} {convertToTimeInterval(values)}\n      </h3>\n      <div className=\"h3 ma3 flex \">\n        <div className=\"w-100\">\n          <div className=\"flex justify-around relative top-2\">\n            {new Array(25).fill(\"\").map((value, index) => {\n              if (index === 0) {\n                return (\n                  <div\n                    key={index}\n                    className={`bn flex items-center justify-center w-100 z-1`}\n                  >\n                    <Add\n                      className=\"grow pb2 pointer gray\"\n                      onClick={() => setTimes(times.concat(1))}\n                    />\n                  </div>\n                );\n              }\n              return (\n                <div\n                  key={index}\n                  className={`bn tc w-100 ${(index <= 5 || index >= 20) &&\n                    \"bg-light-gray\"}`}\n                >\n                  <p className={`code pb2 tc`}>{index}</p>\n                </div>\n              );\n            })}\n          </div>\n          <RangeSelector\n            values={values}\n            min={0}\n            max={24}\n            step={1}\n            color=\"#7D52D8\"\n            className=\"relative  bottom-2 pt1\"\n            onChange={handleChange}\n            round=\"small\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}