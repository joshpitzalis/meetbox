{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport firebase from \"../sideEffects/firebase\";\nexport var createMeeting =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(event) {\n    var payload, newDoc;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            payload = event.payload;\n            _context.next = 3;\n            return firebase.firestore().collection(\"meetings\").add({\n              options: _JSON$stringify(payload)\n            }).catch(function (error) {\n              return error;\n            });\n\n          case 3:\n            newDoc = _context.sent;\n            return _context.abrupt(\"return\", newDoc.id);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createMeeting(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var selectTime =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(date, time, docId) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", firebase.firestore().collection(\"meetings\").doc(docId).update({\n              time: time,\n              date: date\n            }).catch(function (error) {\n              return error;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function selectTime(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/joshpitzalis/Desktop/meetbox/features/schedule/helpers/actions.js"],"names":["firebase","createMeeting","event","payload","firestore","collection","add","options","catch","error","newDoc","id","selectTime","date","time","docId","doc","update"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,yBAArB;AAEA,OAAO,IAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,OADmB,GACPD,KADO,CACnBC,OADmB;AAAA;AAAA,mBAENH,QAAQ,CAC1BI,SADkB,GAElBC,UAFkB,CAEP,UAFO,EAGlBC,GAHkB,CAGd;AAAEC,cAAAA,OAAO,EAAE,gBAAeJ,OAAf;AAAX,aAHc,EAIlBK,KAJkB,CAIZ,UAAAC,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAJO,CAFM;;AAAA;AAErBC,YAAAA,MAFqB;AAAA,6CAOpBA,MAAM,CAACC,EAPa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbV,aAAa;AAAA;AAAA;AAAA,GAAnB;AAUP,OAAO,IAAMW,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOC,IAAP,EAAaC,IAAb,EAAmBC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,8CACxBf,QAAQ,CACLI,SADH,GAEGC,UAFH,CAEc,UAFd,EAGGW,GAHH,CAGOD,KAHP,EAIGE,MAJH,CAIU;AAAEH,cAAAA,IAAI,EAAJA,IAAF;AAAQD,cAAAA,IAAI,EAAJA;AAAR,aAJV,EAKGL,KALH,CAKS,UAAAC,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aALd,CADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVG,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import firebase from \"../sideEffects/firebase\";\n\nexport const createMeeting = async event => {\n  const { payload } = event;\n  const newDoc = await firebase\n    .firestore()\n    .collection(\"meetings\")\n    .add({ options: JSON.stringify(payload) })\n    .catch(error => error);\n  return newDoc.id;\n};\n\nexport const selectTime = async (date, time, docId) =>\n  firebase\n    .firestore()\n    .collection(\"meetings\")\n    .doc(docId)\n    .update({ time, date })\n    .catch(error => error);\n"]},"metadata":{},"sourceType":"module"}