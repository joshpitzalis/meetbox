{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/joshpitzalis/Desktop/meetbox/pages/index.jsx\";\nimport React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { useState } from \"react\";\nimport { Machine } from \"xstate\";\nimport Layout from \"../components/Layout\";\nimport Calendar from \"../features/schedule/components/Calendar\";\nimport TimeBar from \"../features/schedule/components/TimeBar\";\nimport firebase from \"../sideEffects/firebase\";\nimport Next from \"../static/svg/NextStep.jsx\";\nvar scheduleMachine = Machine({\n  id: \"schedule\",\n  initial: \"calendar\",\n  states: {\n    calendar: {\n      on: {\n        CONFIRMED_DATES: \"times\"\n      }\n    },\n    times: {\n      on: {\n        CONFIRMED_TIMES: \"ready\",\n        ADDED_NEW_DATE: \"calendar\"\n      }\n    },\n    ready: {\n      on: {\n        SELECTED_A_DATE: \"confirmed\"\n      }\n    },\n    confirmed: {\n      type: \"final\"\n    }\n  }\n});\nvar propTypes = {};\nvar defaultProps = {};\n\nvar initialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var polls;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            polls = [];\n            _context.next = 3;\n            return firebase.firestore().collection(\"polls\").get().then(function (snap) {\n              return snap.map(function (doc) {\n                return polls.push(doc.data());\n              });\n            }).catch(error);\n\n          case 3:\n            return _context.abrupt(\"return\", {\n              polls: polls\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function initialProps() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function index(_ref2) {\n  var polls = _ref2.polls;\n  var tomorrow = new Date(new Date(new Date().setDate(new Date().getDate() + 1)).setHours(0, 0, 0, 0));\n\n  var _useState = useState(_defineProperty({}, tomorrow, [[13, 14]])),\n      _useState2 = _slicedToArray(_useState, 2),\n      dates = _useState2[0],\n      setDates = _useState2[1];\n\n  var _useMachine = useMachine(scheduleMachine),\n      _useMachine2 = _slicedToArray(_useMachine, 2),\n      current = _useMachine2[0],\n      send = _useMachine2[1]; // React.useEffect(() => {\n  //   const unsubscribe = collectionData(db && db.collection(\"polls\"))\n  //     .pipe(tap(poll => console.log(\"This is just an observable!\", poll)))\n  //     .subscribe(polls => {\n  //       /* update UI */\n  //     });\n  //   () => unsubscribe();\n  // }, []);\n\n\n  console.log(\"polls\", polls);\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"vh-100 vw-100 flex flex-column items-center justify-around pa0 ma0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, current.value === \"calendar\" && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"f1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Pick up to 3 dates to meet...\"), React.createElement(Calendar, {\n    handleSelect: setDates,\n    dates: dates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Next, {\n    action: function action() {\n      return send(\"CONFIRMED_DATES\");\n    },\n    className: \"pointer grow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), current.value === \"times\" && React.createElement(React.Fragment, null, React.createElement(TimeBar, {\n    dates: dates,\n    send: send,\n    setDates: setDates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Next, {\n    action: function action() {\n      return send(\"CONFIRMED_TIMES\");\n    },\n    className: \"pointer grow gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))));\n}\nindex.propTypes = propTypes;\nindex.defaultProps = defaultProps;\nindex.getInitialProps = initialProps;","map":{"version":3,"sources":["/Users/joshpitzalis/Desktop/meetbox/pages/index.jsx"],"names":["useMachine","useState","Machine","Layout","Calendar","TimeBar","firebase","Next","scheduleMachine","id","initial","states","calendar","on","CONFIRMED_DATES","times","CONFIRMED_TIMES","ADDED_NEW_DATE","ready","SELECTED_A_DATE","confirmed","type","propTypes","defaultProps","initialProps","polls","firestore","collection","get","then","snap","map","doc","push","data","catch","error","index","tomorrow","Date","setDate","getDate","setHours","dates","setDates","current","send","console","log","value","getInitialProps"],"mappings":"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","sourcesContent":["import { useMachine } from \"@xstate/react\";\nimport { useState } from \"react\";\nimport { Machine } from \"xstate\";\nimport Layout from \"../components/Layout\";\nimport Calendar from \"../features/schedule/components/Calendar\";\nimport TimeBar from \"../features/schedule/components/TimeBar\";\nimport firebase from \"../sideEffects/firebase\";\nimport Next from \"../static/svg/NextStep.jsx\";\n\nconst scheduleMachine = Machine({\n  id: \"schedule\",\n  initial: \"calendar\",\n  states: {\n    calendar: {\n      on: { CONFIRMED_DATES: \"times\" }\n    },\n    times: {\n      on: {\n        CONFIRMED_TIMES: \"ready\",\n        ADDED_NEW_DATE: \"calendar\"\n      }\n    },\n    ready: {\n      on: { SELECTED_A_DATE: \"confirmed\" }\n    },\n    confirmed: {\n      type: \"final\"\n    }\n  }\n});\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nconst initialProps = async () => {\n  const polls = [];\n  await firebase\n    .firestore()\n    .collection(\"polls\")\n    .get()\n    .then(snap => snap.map(doc => polls.push(doc.data())))\n    .catch(error);\n\n  return { polls };\n};\n\nexport default function index({ polls }) {\n  const tomorrow = new Date(\n    new Date(new Date().setDate(new Date().getDate() + 1)).setHours(0, 0, 0, 0)\n  );\n\n  const [dates, setDates] = useState({\n    [tomorrow]: [[13, 14]]\n  });\n\n  const [current, send] = useMachine(scheduleMachine);\n\n  // React.useEffect(() => {\n  //   const unsubscribe = collectionData(db && db.collection(\"polls\"))\n  //     .pipe(tap(poll => console.log(\"This is just an observable!\", poll)))\n  //     .subscribe(polls => {\n  //       /* update UI */\n  //     });\n  //   () => unsubscribe();\n  // }, []);\n\n  console.log(\"polls\", polls);\n  return (\n    <Layout>\n      <section className=\"vh-100 vw-100 flex flex-column items-center justify-around pa0 ma0\">\n        {current.value === \"calendar\" && (\n          <>\n            <h1 className=\"f1\">Pick up to 3 dates to meet...</h1>\n            <Calendar handleSelect={setDates} dates={dates} />\n            <Next\n              action={() => send(\"CONFIRMED_DATES\")}\n              className=\"pointer grow\"\n            />\n          </>\n        )}\n\n        {current.value === \"times\" && (\n          <>\n            <TimeBar dates={dates} send={send} setDates={setDates} />\n            <Next\n              action={() => send(\"CONFIRMED_TIMES\")}\n              className=\"pointer grow gray\"\n            />\n          </>\n        )}\n      </section>\n    </Layout>\n  );\n}\n\nindex.propTypes = propTypes;\nindex.defaultProps = defaultProps;\nindex.getInitialProps = initialProps;\n"]},"metadata":{},"sourceType":"module"}