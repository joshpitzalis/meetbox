{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport var convertToTimeInterval = function convertToTimeInterval(times) {\n  var timeA = times[0];\n  var timeB = times[1];\n\n  var TwelveHourFormat = function TwelveHourFormat(time) {\n    if (time > 12) {\n      return \"\".concat(time - 12, \" pm\");\n    }\n\n    return \"\".concat(time, \" am\");\n  };\n\n  return \"\".concat(TwelveHourFormat(timeA), \" to \").concat(TwelveHourFormat(timeB));\n};\n\nvar handleNewTime = function handleNewTime(date, setDates, dates) {\n  return setDates(_objectSpread({}, dates, _defineProperty({}, date, [].concat(_toConsumableArray(dates[date]), [[10, 11]]))));\n};\n\nvar handleChangeTime = function handleChangeTime(newTimes, date, setDates, dates, index) {\n  var nextTimes = _toConsumableArray(dates[date]);\n\n  nextTimes[index] = newTimes;\n  return setDates(_objectSpread({}, dates, _defineProperty({}, date, nextTimes)));\n};","map":{"version":3,"sources":["/Users/joshpitzalis/Desktop/meetbox/features/schedule/helpers/timeBarHelpers.js"],"names":["convertToTimeInterval","times","timeA","timeB","TwelveHourFormat","time","handleNewTime","date","setDates","dates","handleChangeTime","newTimes","index","nextTimes"],"mappings":";;;AAAA,OAAO,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK,EAAI;AAC5C,MAAMC,KAAK,GAAGD,KAAK,CAAC,CAAD,CAAnB;AACA,MAAME,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAnB;;AAEA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI,EAAI;AAC/B,QAAIA,IAAI,GAAG,EAAX,EAAe;AACb,uBAAUA,IAAI,GAAG,EAAjB;AACD;;AACD,qBAAUA,IAAV;AACD,GALD;;AAOA,mBAAUD,gBAAgB,CAACF,KAAD,CAA1B,iBAAwCE,gBAAgB,CAACD,KAAD,CAAxD;AACD,CAZM;;AAcP,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB;AAAA,SACpBD,QAAQ,mBAAMC,KAAN,sBAAcF,IAAd,+BAAyBE,KAAK,CAACF,IAAD,CAA9B,IAAsC,CAAC,EAAD,EAAK,EAAL,CAAtC,KADY;AAAA,CAAtB;;AAGA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAWJ,IAAX,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCG,KAAlC,EAA4C;AACnE,MAAMC,SAAS,sBAAOJ,KAAK,CAACF,IAAD,CAAZ,CAAf;;AACAM,EAAAA,SAAS,CAACD,KAAD,CAAT,GAAmBD,QAAnB;AACA,SAAOH,QAAQ,mBACVC,KADU,sBAEZF,IAFY,EAELM,SAFK,GAAf;AAID,CAPD","sourcesContent":["export const convertToTimeInterval = times => {\n  const timeA = times[0];\n  const timeB = times[1];\n\n  const TwelveHourFormat = time => {\n    if (time > 12) {\n      return `${time - 12} pm`;\n    }\n    return `${time} am`;\n  };\n\n  return `${TwelveHourFormat(timeA)} to ${TwelveHourFormat(timeB)}`;\n};\n\nconst handleNewTime = (date, setDates, dates) =>\n  setDates({ ...dates, [date]: [...dates[date], [10, 11]] });\n\nconst handleChangeTime = (newTimes, date, setDates, dates, index) => {\n  const nextTimes = [...dates[date]];\n  nextTimes[index] = newTimes;\n  return setDates({\n    ...dates,\n    [date]: nextTimes\n  });\n};\n"]},"metadata":{},"sourceType":"module"}