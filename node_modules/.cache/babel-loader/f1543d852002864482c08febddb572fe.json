{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/joshpitzalis/Desktop/meetbox/pages/index.jsx\";\nimport React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { useState } from \"react\";\nimport { Machine } from \"xstate\";\nimport { PrimaryButton } from \"../components/Buttons\";\nimport Layout from \"../components/Layout\";\nimport Calendar from \"../features/schedule/components/Calendar\";\nimport TimeBar from \"../features/schedule/components/TimeBar\";\nvar scheduleMachine = Machine({\n  id: \"schedule\",\n  initial: \"calendar\",\n  states: {\n    calendar: {\n      on: {\n        CONFIRMED_DATES: \"times\"\n      }\n    },\n    times: {\n      on: {\n        CONFIRMED_TIMES: \"ready\",\n        ADDED_NEW_DATE: \"calendar\"\n      }\n    },\n    ready: {\n      on: {\n        SELECTED_A_DATE: \"confirmed\"\n      }\n    },\n    confirmed: {\n      type: \"final\"\n    }\n  }\n});\nvar propTypes = {};\nvar defaultProps = {};\nexport default function index() {\n  var _useState = useState([\"\".concat(new Date(new Date().setDate(new Date().getDate() + 1)))]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dates = _useState2[0],\n      setDates = _useState2[1];\n\n  var _useMachine = useMachine(scheduleMachine),\n      _useMachine2 = _slicedToArray(_useMachine, 2),\n      current = _useMachine2[0],\n      send = _useMachine2[1];\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"vh-100 vw-100 flex flex-column items-center justify-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, current.value === \"calendar\" && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Pick up to 3 dates...\"), React.createElement(Calendar, {\n    handleSelect: setDates,\n    dates: dates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(PrimaryButton, {\n    action: function action() {\n      return send(\"CONFIRMED_DATES\");\n    },\n    text: \"Next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), current.value === \"times\" && React.createElement(React.Fragment, null, React.createElement(TimeBar, {\n    dates: dates,\n    send: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(PrimaryButton, {\n    action: function action() {\n      return send(\"CONFIRMED_TIMES\");\n    },\n    text: \"Next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n}\nindex.propTypes = propTypes;\nindex.defaultProps = defaultProps;","map":{"version":3,"sources":["/Users/joshpitzalis/Desktop/meetbox/pages/index.jsx"],"names":["useMachine","useState","Machine","PrimaryButton","Layout","Calendar","TimeBar","scheduleMachine","id","initial","states","calendar","on","CONFIRMED_DATES","times","CONFIRMED_TIMES","ADDED_NEW_DATE","ready","SELECTED_A_DATE","confirmed","type","propTypes","defaultProps","index","Date","setDate","getDate","dates","setDates","current","send","value"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,OAAP,MAAoB,yCAApB;AAEA,IAAMC,eAAe,GAAGL,OAAO,CAAC;AAC9BM,EAAAA,EAAE,EAAE,UAD0B;AAE9BC,EAAAA,OAAO,EAAE,UAFqB;AAG9BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB;AADI,KADJ;AAINC,IAAAA,KAAK,EAAE;AACLF,MAAAA,EAAE,EAAE;AACFG,QAAAA,eAAe,EAAE,OADf;AAEFC,QAAAA,cAAc,EAAE;AAFd;AADC,KAJD;AAUNC,IAAAA,KAAK,EAAE;AACLL,MAAAA,EAAE,EAAE;AAAEM,QAAAA,eAAe,EAAE;AAAnB;AADC,KAVD;AAaNC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG;AAbL;AAHsB,CAAD,CAA/B;AAsBA,IAAMC,SAAS,GAAG,EAAlB;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,kBACJtB,QAAQ,CAAC,WAC9B,IAAIuB,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,CAAmB,IAAID,IAAJ,GAAWE,OAAX,KAAuB,CAA1C,CAAT,CAD8B,EAAD,CADJ;AAAA;AAAA,MACvBC,KADuB;AAAA,MAChBC,QADgB;;AAAA,oBAKN5B,UAAU,CAACO,eAAD,CALJ;AAAA;AAAA,MAKvBsB,OALuB;AAAA,MAKdC,IALc;;AAM9B,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAS,IAAA,SAAS,EAAC,4DAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,KAAR,KAAkB,UAAlB,IACC,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,QAAD;AAAU,IAAA,YAAY,EAAEH,QAAxB;AAAkC,IAAA,KAAK,EAAED,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAE;AAAA,aAAMG,IAAI,CAAC,iBAAD,CAAV;AAAA,KAAvB;AAAsD,IAAA,IAAI,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFJ,EASGD,OAAO,CAACE,KAAR,KAAkB,OAAlB,IACC,0CACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEJ,KAAhB;AAAuB,IAAA,IAAI,EAAEG,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAE;AAAA,aAAMA,IAAI,CAAC,iBAAD,CAAV;AAAA,KAAvB;AAAsD,IAAA,IAAI,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVJ,CALF,CADF;AA4CD;AAEDP,KAAK,CAACF,SAAN,GAAkBA,SAAlB;AACAE,KAAK,CAACD,YAAN,GAAqBA,YAArB","sourcesContent":["import { useMachine } from \"@xstate/react\";\nimport { useState } from \"react\";\nimport { Machine } from \"xstate\";\nimport { PrimaryButton } from \"../components/Buttons\";\nimport Layout from \"../components/Layout\";\nimport Calendar from \"../features/schedule/components/Calendar\";\nimport TimeBar from \"../features/schedule/components/TimeBar\";\n\nconst scheduleMachine = Machine({\n  id: \"schedule\",\n  initial: \"calendar\",\n  states: {\n    calendar: {\n      on: { CONFIRMED_DATES: \"times\" }\n    },\n    times: {\n      on: {\n        CONFIRMED_TIMES: \"ready\",\n        ADDED_NEW_DATE: \"calendar\"\n      }\n    },\n    ready: {\n      on: { SELECTED_A_DATE: \"confirmed\" }\n    },\n    confirmed: {\n      type: \"final\"\n    }\n  }\n});\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nexport default function index() {\n  const [dates, setDates] = useState([\n    `${new Date(new Date().setDate(new Date().getDate() + 1))}`\n  ]);\n\n  const [current, send] = useMachine(scheduleMachine);\n  return (\n    <Layout>\n      {/* <section className=\"flex flex-column flex-row-ns vh-100 w-100\"> */}\n      {/* <aside className=\"title\">\n          <h1 className=\"ph4 \">Meet Box</h1>\n        </aside> */}\n      <section className=\"vh-100 vw-100 flex flex-column items-center justify-around\">\n        {current.value === \"calendar\" && (\n          <>\n            <h1>Pick up to 3 dates...</h1>\n            <Calendar handleSelect={setDates} dates={dates} />\n            <PrimaryButton action={() => send(\"CONFIRMED_DATES\")} text=\"Next\" />\n          </>\n        )}\n\n        {current.value === \"times\" && (\n          <>\n            <TimeBar dates={dates} send={send} />\n            <PrimaryButton action={() => send(\"CONFIRMED_TIMES\")} text=\"Next\" />\n          </>\n        )}\n      </section>\n      {/* </section> */}\n      {/* <style jsx>\n        {`\n          .title {\n            writing-mode: vertical-rl;\n            transform: rotate(180deg);\n            text-align: center;\n            font-size: 4rem;\n            text-transform: uppercase;\n\n            font-family: Futura, \"Trebuchet MS\", Arial, sans-serif;\n            font-size: 23px;\n            font-style: normal;\n            font-variant: normal;\n            font-weight: 700;\n            line-height: 23px;\n            color: #363d87;\n          }\n        `}\n      </style> */}\n    </Layout>\n  );\n}\n\nindex.propTypes = propTypes;\nindex.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}