{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nexport default function loadDb() {\n  return _loadDb.apply(this, arguments);\n}\n\nfunction _loadDb() {\n  _loadDb = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var firebase;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import(\"firebase/app\");\n\n          case 2:\n            firebase = _context.sent;\n            _context.next = 5;\n            return import(\"@firebase/database\");\n\n          case 5:\n            try {\n              if (!firebase.apps.length) {\n                firebase.initializeApp({\n                  apiKey: \"AIzaSyD0_c1V4vvrHVwVD941n_KLnbj55f0c5gI\",\n                  authDomain: \"decision-dev.firebaseapp.com\",\n                  databaseURL: \"https://decision-dev.firebaseio.com\",\n                  projectId: \"decision-dev\",\n                  storageBucket: \"decision-dev.appspot.com\",\n                  messagingSenderId: \"1006893299756\",\n                  appId: \"1:1006893299756:web:0581850d4e51ba77\"\n                });\n              } else {\n                firebase.app();\n              }\n            } catch (err) {\n              // we skip the \"already exists\" message which is\n              // not an actual error when we're hot-reloading\n              if (!/already exists/.test(err.message)) {\n                console.error(\"Firebase initialization error\", err.stack);\n              }\n            }\n\n            return _context.abrupt(\"return\", firebase.firestore());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadDb.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/joshpitzalis/Desktop/meetbox/sideEffects/firebase.js"],"names":["loadDb","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","err","test","message","console","error","stack","firestore"],"mappings":";;AAAA,wBAA8BA,MAA9B;AAAA;AAAA;;;;;2BAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACU,OAAO,cAAP,CADV;;AAAA;AACPC,YAAAA,QADO;AAAA;AAAA,mBAEP,OAAO,oBAAP,CAFO;;AAAA;AAIb,gBAAI;AACF,kBAAI,CAACA,QAAQ,CAACC,IAAT,CAAcC,MAAnB,EAA2B;AACzBF,gBAAAA,QAAQ,CAACG,aAAT,CAAuB;AACrBC,kBAAAA,MAAM,EAAE,yCADa;AAErBC,kBAAAA,UAAU,EAAE,8BAFS;AAGrBC,kBAAAA,WAAW,EAAE,qCAHQ;AAIrBC,kBAAAA,SAAS,EAAE,cAJU;AAKrBC,kBAAAA,aAAa,EAAE,0BALM;AAMrBC,kBAAAA,iBAAiB,EAAE,eANE;AAOrBC,kBAAAA,KAAK,EAAE;AAPc,iBAAvB;AASD,eAVD,MAUO;AACLV,gBAAAA,QAAQ,CAACW,GAAT;AACD;AACF,aAdD,CAcE,OAAOC,GAAP,EAAY;AACZ;AACA;AACA,kBAAI,CAAC,iBAAiBC,IAAjB,CAAsBD,GAAG,CAACE,OAA1B,CAAL,EAAyC;AACvCC,gBAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CJ,GAAG,CAACK,KAAnD;AACD;AACF;;AAxBY,6CA0BNjB,QAAQ,CAACkB,SAAT,EA1BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export default async function loadDb() {\n  const firebase = await import(\"firebase/app\");\n  await import(\"@firebase/database\");\n\n  try {\n    if (!firebase.apps.length) {\n      firebase.initializeApp({\n        apiKey: \"AIzaSyD0_c1V4vvrHVwVD941n_KLnbj55f0c5gI\",\n        authDomain: \"decision-dev.firebaseapp.com\",\n        databaseURL: \"https://decision-dev.firebaseio.com\",\n        projectId: \"decision-dev\",\n        storageBucket: \"decision-dev.appspot.com\",\n        messagingSenderId: \"1006893299756\",\n        appId: \"1:1006893299756:web:0581850d4e51ba77\"\n      });\n    } else {\n      firebase.app();\n    }\n  } catch (err) {\n    // we skip the \"already exists\" message which is\n    // not an actual error when we're hot-reloading\n    if (!/already exists/.test(err.message)) {\n      console.error(\"Firebase initialization error\", err.stack);\n    }\n  }\n\n  return firebase.firestore();\n}\n"]},"metadata":{},"sourceType":"module"}