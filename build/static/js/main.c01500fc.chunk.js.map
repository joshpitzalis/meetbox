{"version":3,"sources":["features/schedule/helpers/calendarHelpers.js","features/schedule/components/Calendar.jsx","components/Buttons.jsx","features/schedule/helpers/timeBarHelpers.js","features/schedule/components/TimeBar/TimeBlock.jsx","features/schedule/components/TimeBar/index.jsx","sideEffects/firebase.ts","features/schedule/helpers/actions.js","pages/App.jsx","pages/Meetings.jsx","serviceWorker.ts","index.tsx"],"names":["handleSelectDate","dates","date","handleSelect","selectedDate","Date","setHours","hasOwnProperty","newDates","Object","objectSpread","defineProperty","calendar","_ref","react_default","a","createElement","className","Calendar","onSelect","size","showAdjacentDays","animate","keys","defaultProps","PrimaryButton","action","text","concat","onClick","SecondaryButton","_ref2","convertToTimeInterval","times","timeA","timeB","TwelveHourFormat","time","TimeBlock","setDates","timeIndex","maxTimes","Fragment","format","Array","fill","map","value","index","key","Close","length","nextDates","nextTimes","filter","item","console","log","handleClose","Add","toConsumableArray","handleNewTime","RangeSelector","values","min","max","step","color","onChange","newTimes","handleChangeTime","round","TimeBar","send","reduce","flat","toFlatten","entries","dateIndex","_ref3","slicedToArray","TimeBlock_TimeBlock","Buttons_SecondaryButton","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","createMeeting","asyncToGenerator","regenerator_default","mark","_callee","event","payload","options","id","wrap","_context","prev","next","JSON","stringify","Math","random","toString","slice","collection","doc","set","catch","error","abrupt","stop","_x","apply","this","arguments","selectTime","_callee2","docId","_context2","update","_x2","_x3","_x4","scheduleMachine","Machine","initial","context","states","on","CONFIRMED_DATES","CONFIRMED_TIMES","ADDED_NEW_DATE","loading","invoke","src","onDone","target","onError","ready","SELECTED_A_DATE","confirmed","type","failure","App","history","tomorrow","setDate","getDate","_useState","useState","_useState2","_useMachine","useMachine","_useMachine2","current","_useState4","_useState5","setMeetings","useEffect","_fetchData","response","get","then","meetings","docs","data","sent","fetchData","LinkNext","push","Meet","match","_React$useState","React","_React$useState2","slug","params","meetId","exists","setLoaded","setConfirm","parse","_React$useState3","_React$useState4","selected","setSelected","_React$useState5","_React$useState6","_React$useState7","_React$useState8","loaded","_ref4","Meetings_TimeBox","Buttons_PrimaryButton","TimeBox","_ref5","picked","Boolean","window","location","hostname","ReactDOM","render","Grommet","plain","react_router_dom","react_router","exact","path","component","Meetings","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.c01500fc.chunk.js","sourcesContent":["export const handleSelectDate = (dates, date, handleSelect) => {\n  const selectedDate = new Date(new Date(date).setHours(0, 0, 0, 0));\n  if (dates && dates.hasOwnProperty(selectedDate)) {\n    const newDates = { ...dates };\n    delete newDates[selectedDate];\n    return handleSelect(newDates);\n  }\n  return handleSelect({ ...dates, [selectedDate]: [[13, 14]] });\n};\n","import { Calendar } from \"grommet\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { handleSelectDate } from \"../helpers/calendarHelpers\";\n\nconst propTypes = {\n  handleSelect: PropTypes.func.isRequired,\n  dates: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nconst defaultProps = {};\n\nexport default function calendar({ handleSelect, dates }) {\n  return (\n    <section className=\"center ma4\">\n      <Calendar\n        onSelect={date => handleSelectDate(dates, date, handleSelect)}\n        size=\"medium\"\n        showAdjacentDays\n        animate\n        dates={Object.keys(dates)}\n      />\n    </section>\n  );\n}\n\ncalendar.propTypes = propTypes;\ncalendar.defaultProps = defaultProps;\n","import React from \"react\";\n\nexport const PrimaryButton = ({ action, text, className }) => (\n  <button\n    className={`pointer f6 grow no-underline br-pill b--navy ph3 pv2 mb2 dib white bg-navy ttu ${className}`}\n    onClick={action}\n  >\n    {text}\n  </button>\n);\n\nexport const SecondaryButton = ({ action, text, className }) => {\n  return (\n    <button\n      className={`pointer f6 grow  bn  ph3 pv2 mb2 dib gray ttu ${className}`}\n      onClick={action}\n    >\n      {text}\n    </button>\n  );\n};\n","export const convertToTimeInterval = times => {\n  const timeA = times[0];\n  const timeB = times[1];\n\n  const TwelveHourFormat = time => {\n    if (time > 12) {\n      return `${time - 12} pm`;\n    }\n    return `${time} am`;\n  };\n\n  return `${TwelveHourFormat(timeA)} to ${TwelveHourFormat(timeB)}`;\n};\n\nexport const handleNewTime = (date, setDates, dates) =>\n  setDates({ ...dates, [date]: [...dates[date], [10, 11]] });\n\nexport const handleChangeTime = (newTimes, date, setDates, dates, index) => {\n  const nextTimes = [...dates[date]];\n  nextTimes[index] = newTimes;\n  return setDates({\n    ...dates,\n    [date]: nextTimes\n  });\n};\n\nexport const handleClose = (date, setDates, dates, timeIndex) => {\n  // if there is only one time for teh date then deleting it removes the date from the calendar\n  if (dates[date].length === 1) {\n    const nextDates = { ...dates };\n    delete nextDates[date];\n    return setDates(nextDates);\n  }\n\n  const nextTimes = dates[date].filter((item, index) => index !== timeIndex);\n  console.log(\"nextTimes\", nextTimes);\n  return setDates({\n    ...dates,\n    [date]: nextTimes\n  });\n};\n","import { format } from \"date-fns\";\nimport { RangeSelector } from \"grommet\";\nimport { Add, Close } from \"grommet-icons\";\nimport React from \"react\";\nimport {\n  convertToTimeInterval,\n  handleChangeTime,\n  handleClose,\n  handleNewTime\n} from \"../../helpers/timeBarHelpers\";\n\nexport const TimeBlock = ({\n  time,\n  date,\n  setDates,\n  dates,\n  timeIndex,\n  maxTimes\n}) => {\n  return (\n    <>\n      <h3 className=\"tc mt5 relative top-2\">\n        {format(new Date(date), \"do MMMM\")}{\" \"}\n        <span className=\"f2 pl3\">{convertToTimeInterval(time)}</span>\n      </h3>\n      <div className=\"h3 ma3 flex\">\n        <div className=\"w-100 pt0\">\n          <div className=\"flex justify-around relative top-2\">\n            {new Array(25).fill(\"\").map((value, index) => {\n              if (index === 0 && maxTimes) {\n                return (\n                  <div\n                    key={index}\n                    className={`bn flex items-center justify-center w-100 z-1`}\n                  >\n                    <Close\n                      className=\"grow pb2 pointer gray\"\n                      onClick={() =>\n                        handleClose(date, setDates, dates, timeIndex)\n                      }\n                    />\n                  </div>\n                );\n              }\n              if (index === 0) {\n                return (\n                  <div\n                    key={index}\n                    className={`bn flex items-center justify-center w-100 z-1`}\n                  >\n                    <Add\n                      className=\"grow pb2 pointer gray\"\n                      onClick={() => handleNewTime(date, setDates, dates)}\n                    />\n                  </div>\n                );\n              }\n              return (\n                <div\n                  key={index}\n                  className={`bn tc w-100 ${(index <= 5 || index >= 20) &&\n                    \"bg-light-gray\"}`}\n                >\n                  <p className={`code pb2 tc`}>{index}</p>\n                </div>\n              );\n            })}\n          </div>\n          <RangeSelector\n            values={time}\n            min={0}\n            max={24}\n            step={1}\n            color=\"#7D52D8\"\n            className=\"relative  bottom-2 pt1\"\n            onChange={newTimes =>\n              handleChangeTime(newTimes, date, setDates, dates, timeIndex)\n            }\n            round=\"small\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { SecondaryButton } from \"../../../../components/Buttons\";\nimport { TimeBlock } from \"./TimeBlock\";\nconst propTypes = {\n  dates: PropTypes.arrayOf(PropTypes.string).isRequired,\n  send: PropTypes.func.isRequired\n};\nconst defaultProps = {};\n\nexport default function TimeBar({ dates, send, setDates }) {\n  const maxTimes =\n    dates &&\n    // Object.values(dates) &&\n    Object.values(dates).reduce((flat, toFlatten) => flat.concat(toFlatten), [])\n      .length >= 3;\n\n  return (\n    <section className=\"w-100 h-75 tc\">\n      {!maxTimes && <h1 className=\"f1\">Select up to 3 times...</h1>}\n      {dates &&\n        Object.entries(dates).map(([date, times], dateIndex) => {\n          return (\n            <div key={+new Date()}>\n              {times.map((time, index) => (\n                <TimeBlock\n                  date={date}\n                  setDates={setDates}\n                  dates={dates}\n                  time={time}\n                  timeIndex={index}\n                  maxTimes={maxTimes}\n                />\n              ))}\n            </div>\n          );\n        })}\n\n      {!maxTimes && (\n        <SecondaryButton\n          action={() => send(\"ADDED_NEW_DATE\")}\n          text=\"+ Add Another Date\"\n          className=\"mt5 h-25\"\n        />\n      )}\n    </section>\n  );\n}\n\nTimeBar.propTypes = propTypes;\nTimeBar.defaultProps = defaultProps;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyD0_c1V4vvrHVwVD941n_KLnbj55f0c5gI\",\n  authDomain: \"decision-dev.firebaseapp.com\",\n  databaseURL: \"https://decision-dev.firebaseio.com\",\n  projectId: \"decision-dev\",\n  storageBucket: \"decision-dev.appspot.com\",\n  messagingSenderId: \"1006893299756\",\n  appId: \"1:1006893299756:web:0581850d4e51ba77\"\n};\n\nconst app = firebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n","import { db } from \"../../../sideEffects/firebase\";\n\nexport const createMeeting = async event => {\n  const { payload } = event;\n  const options = JSON.stringify(payload);\n\n  // randomly generated 5 letter alphanumeric\n  const id = Math.random()\n    .toString(36)\n    .slice(-5);\n\n  await db\n    .collection(\"meetings\")\n    .doc(id)\n    .set({ options })\n    .catch(error => error);\n\n  return id;\n};\n\nexport const selectTime = async (date, time, docId) =>\n  db\n    .collection(\"meetings\")\n    .doc(docId)\n    .update({ time, date })\n    .catch(error => error);\n","import { useMachine } from \"@xstate/react\";\nimport { LinkNext } from \"grommet-icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { Machine } from \"xstate\";\nimport Calendar from \"../features/schedule/components/Calendar\";\nimport TimeBar from \"../features/schedule/components/TimeBar\";\nimport { createMeeting } from \"../features/schedule/helpers/actions\";\nimport { db } from \"../sideEffects/firebase\";\n\n// interface ScheduleStateSchema {\n//   states: {\n//     calendar: {};\n//     times: {};\n//     loading: {};\n//     ready: {};\n//     confirmed: {};\n//     failure: {};\n//   };\n// }\n\n// type ScheduleEvent =\n//   | { type: \"CONFIRMED_DATES\" }\n//   | { type: \"CONFIRMED_TIMES\" }\n//   | { type: \"ADDED_NEW_DATE\" }\n//   | { type: \"SELECTED_A_DATE\" };\n\n// interface ScheduleContext {}\n\n// const scheduleMachine = Machine<\n//   ScheduleContext,\n//   ScheduleStateSchema,\n//   ScheduleEvent\n// >\n\nconst scheduleMachine = Machine({\n  id: \"schedule\",\n  initial: \"calendar\",\n  context: {},\n  states: {\n    calendar: {\n      on: { CONFIRMED_DATES: \"times\" }\n    },\n    times: {\n      on: {\n        CONFIRMED_TIMES: \"loading\",\n        ADDED_NEW_DATE: \"calendar\"\n      }\n    },\n    loading: {\n      invoke: {\n        id: \"createMeeting\",\n        src: (context, event) => createMeeting(event),\n        onDone: {\n          target: \"ready\"\n          // The resolved data is placed into a 'done.invoke.<id>' event, under the data property http://bit.ly/2Ft2WR8\n        },\n        onError: {\n          target: \"failure\"\n        }\n      }\n    },\n    ready: {\n      on: { SELECTED_A_DATE: \"confirmed\" }\n    },\n    confirmed: {\n      type: \"final\"\n    },\n    failure: { type: \"final\" }\n  }\n});\n\n// const App: FunctionComponent = () => {\n//   const tomorrow: string = new Date(\n//     new Date(new Date().setDate(new Date().getDate() + 1)).setHours(0, 0, 0, 0)\n//   ).toString();\n\nconst App = ({ history }) => {\n  const tomorrow = new Date(\n    new Date(new Date().setDate(new Date().getDate() + 1)).setHours(0, 0, 0, 0)\n  );\n\n  const [dates, setDates] = useState({\n    [tomorrow]: [[13, 14]]\n  });\n\n  const [current, send] = useMachine(scheduleMachine);\n  const [meetings, setMeetings] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await db\n        .collection(\"meetings\")\n        .get()\n        .then(collection => {\n          const meetings = collection.docs.map(doc => doc.data());\n          setMeetings(meetings);\n        })\n        .catch(error => error);\n      return response;\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <section>\n      <section className=\"vh-100 vw-100 flex flex-column items-center justify-around pa0 ma0\">\n        {current.value === \"calendar\" && (\n          <>\n            <h1 className=\"f1\">Pick up to 3 dates to meet...</h1>\n            <Calendar handleSelect={setDates} dates={dates} />\n            <LinkNext\n              onClick={() => send(\"CONFIRMED_DATES\")}\n              className=\"pointer grow\"\n            />\n          </>\n        )}\n\n        {current.value === \"times\" && (\n          <>\n            <TimeBar dates={dates} send={send} setDates={setDates} />\n            <LinkNext\n              onClick={() => send({ type: \"CONFIRMED_TIMES\", payload: dates })}\n              className=\"pointer grow gray\"\n            />\n          </>\n        )}\n        {current.value === \"ready\" &&\n          history.push(`/meet/${current.event.data}`)}\n      </section>\n    </section>\n  );\n};\n\nexport default App;\n","import { format } from \"date-fns\";\nimport React from \"react\";\nimport { PrimaryButton } from \"../components/Buttons\";\nimport { selectTime } from \"../features/schedule/helpers/actions\";\nimport { convertToTimeInterval } from \"../features/schedule/helpers/timeBarHelpers\";\nimport { db } from \"../sideEffects/firebase\";\n\nconst Meet = ({ match }) => {\n  const [meetings, setMeetings] = React.useState(false);\n\n  const slug = match.params.meetId;\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      await db\n        .collection(\"meetings\")\n        .doc(slug)\n        .get()\n        .then(doc => doc.exists && doc.data())\n        .then(meetings => {\n          console.log(\"meetings\", meetings);\n          setMeetings(meetings);\n          setLoaded(true);\n          meetings.date && meetings.time && setConfirm(true);\n        })\n        .catch(error => error);\n    };\n    fetchData();\n  }, [slug]);\n\n  const options = meetings && Object.entries(JSON.parse(meetings.options));\n\n  const [selected, setSelected] = React.useState(false);\n\n  const [confirmed, setConfirm] = React.useState(false);\n\n  const [loaded, setLoaded] = React.useState(false);\n\n  return (\n    <section>\n      <div className=\"flex flex-column items-between justify-center h-100\">\n        {loaded && confirmed ? (\n          <h1 className=\"f1 tc\">Confirmed</h1>\n        ) : loaded ? (\n          <h1 className=\"f1 tc\">Pick a time...</h1>\n        ) : (\n          <h1 className=\"f1 tc\">Loading...</h1>\n        )}\n        <section className=\"flex items-center justify-center vh-50\">\n          {options &&\n            options.map(([date, time]) =>\n              time.map(time => (\n                <TimeBox\n                  date={date}\n                  time={time}\n                  slug={slug}\n                  setSelected={setSelected}\n                  selected={\n                    meetings.date && meetings.time\n                      ? { date: meetings.date, time: meetings.time }\n                      : selected\n                  }\n                />\n              ))\n            )}\n        </section>\n        {selected && !confirmed && (\n          <div className=\"tc w-100\">\n            <PrimaryButton\n              text=\"Confirm\"\n              action={() => {\n                selectTime(selected.date, selected.time, slug);\n                setConfirm(true);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Meet;\n\nconst TimeBox = ({ date, time, setSelected, selected }) => {\n  const picked =\n    date === selected.date &&\n    time[0] === selected.time[0] &&\n    time[1] === selected.time[1];\n\n  return (\n    <article\n      className={`mw5 center br3 pa3 pa4-ns mv3 ba b--black-10 pointer grow ${\n        picked ? \"bg-light-blue\" : \"bg-white\"\n      }`}\n      key={date + time}\n      onClick={() => setSelected({ date, time })}\n    >\n      <div className=\"tc\">\n        <h1 className=\"f4 black-70\">{format(new Date(date), \"do MMMM\")}</h1>\n        <hr className=\"mw3 bb bw1 b--black-10\" />\n      </div>\n      <p className=\"lh-copy measure center f3 \">\n        {convertToTimeInterval(time)}\n      </p>\n    </article>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Grommet } from \"grommet\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport App from \"./pages/App\";\nimport Meetings from \"./pages/Meetings\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./styles/index.css\";\n\nconst Routes: React.FunctionComponent = () => (\n  <Grommet plain>\n    <BrowserRouter>\n      <main className=\"sans-serif\">\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/meet/:meetId\" component={Meetings} />\n      </main>\n    </BrowserRouter>\n  </Grommet>\n);\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}